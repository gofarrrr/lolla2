"""
Vulnerability Solutions Compatibility Layer
Provides backward compatibility for src.core.vulnerability_solutions

The original vulnerability_solutions.py god-file was decomposed into modular services
during Phase 5. This compatibility layer maps the old interface to the new services.
"""

# Import the V5 replacement service
from src.services.reliability.reliability_coordinator_service import (
    ReliabilityCoordinatorService,
)

# Import enums that might be needed (commonly used ones)
from enum import Enum

# Legacy compatibility: Map old class name to new service
VulnerabilitySolutionCoordinator = ReliabilityCoordinatorService


# Provide some basic enums for compatibility
class ConfidenceClassification(str, Enum):
    HIGH_CONFIDENCE = "HIGH_CONFIDENCE"
    MEDIUM_CONFIDENCE = "MEDIUM_CONFIDENCE"
    LOW_CONFIDENCE = "LOW_CONFIDENCE"
    INSUFFICIENT_CONFIDENCE = "INSUFFICIENT_CONFIDENCE"


class FailureMode(str, Enum):
    LOW_CONFIDENCE_ANALYSIS = "low_confidence_analysis"
    CONTRADICTORY_EVIDENCE = "contradictory_evidence"
    DEVILS_ADVOCATE_REJECTION = "devils_advocate_rejection"
    RESEARCH_GAPS = "research_gaps"
    LLM_VALIDATION_FAILURE = "llm_validation_failure"
    DATA_QUALITY_ISSUES = "data_quality_issues"


class RecommendationStatus(str, Enum):
    RECOMMENDED = "RECOMMENDED"
    NOT_RECOMMENDED = "NOT_RECOMMENDED"
    CONDITIONAL = "CONDITIONAL"
    INSUFFICIENT_DATA = "INSUFFICIENT_DATA"


# Legacy compatibility exports
__all__ = [
    "VulnerabilitySolutionCoordinator",
    "ConfidenceClassification",
    "FailureMode",
    "RecommendationStatus",
]
